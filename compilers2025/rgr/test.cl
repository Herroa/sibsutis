(* Тест на проверку семантических ошибок *)

(* Тест на уникальность названий классов - дублирование класса Test *)
class Test {
   x : Int;
   init(a : Int) : Test {
      {
         x <- a;
         self;
      }
   };
};

class Test {  (* Ошибка: повторное объявление класса *)
   y : Int;
};

(* Проверка наличия метода main *)
class Main {
   main() : Object {
      new Object
   };
};

(* Тест на уникальность названий полей и методов в классе *)
class FieldMethodTest {
   field1 : Int;
   field1 : String;  (* Ошибка: повторное объявление поля *)
   
   method1() : Int { 1 };
   method1() : String { "hello" };  (* Ошибка: повторное объявление метода *)
};

(* Тест на уникальность параметров методов *)
class ParameterTest {
   method(x : Int, x : String) : Object {  (* Ошибка: повторное использование имени параметра *)
      new Object
   };
};

(* Тест на область видимости и существование переменных *)
class ScopeTest {
   field : Int;
   
   method() : Object {
      let x : Int <- 1 in {
         let x : Int <- 2 in  (* Ошибка: повторное объявление в той же области видимости *)
            x + nonexistent;  (* Ошибка: использование необъявленной переменной *)
      }
   };
};

(* Тест на проверку графа наследования *)
class A inherits B {};  (* Ошибка: класс B не определен *)
class C inherits A {};
class B inherits C {};  (* Ошибка: цикл в графе наследования *)

(* Тест на проверку типов *)
class TypeTest {
   method() : Object {
      {
         1 + "2";        (* Ошибка: несовместимые типы в операции сложения *)
         2.method();     (* Ошибка: вызов метода у Int *)
         true + 3;       (* Ошибка: несовместимые типы *)
      }
   };
};