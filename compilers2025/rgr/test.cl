class Main {
    main(): Int {
        let x: Int <- 5,
            y: String <- "Hello",
            z: Bool <- true in {
            -- Проверка области видимости
            let x: Int <- 10 in {  -- Ошибка: повторное объявление x
                x + 5
            };
            
            -- Проверка типов
            x + y;  -- Ошибка: сложение Int и String
            y.length();  -- Корректно: вызов метода строки
            z.not();  -- Корректно: логическое отрицание
            
            -- Проверка существования переменных
            a + b;  -- Ошибка: переменные a и b не объявлены
            
            -- Возвращаем результат
            x
        }
    };
};

-- Проверка уникальности имен классов
class Main {  -- Ошибка: класс Main уже существует
    x: Int;
};

-- Проверка наследования
class A inherits B {  -- Ошибка: класс B не существует
    x: Int;
};

class B inherits A {  -- Ошибка: циклическое наследование
    y: Int;
};

-- Проверка уникальности методов и полей
class Test {
    x: Int;  -- Поле
    x: String;  -- Ошибка: поле x уже существует
    
    method(): Int {  -- Метод
        5
    };
    
    method(): String {  -- Ошибка: метод method уже существует
        "Hello"
    };
    
    -- Проверка уникальности параметров
    test(a: Int, a: String): Int {  -- Ошибка: параметр a уже существует
        a
    };
};
